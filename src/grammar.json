{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "kolibri",
  "rules": {
    "program": {
      "type": "SYMBOL",
      "name": "expression"
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "operator_expression"
        },
        {
          "type": "SYMBOL",
          "name": "parenthesized_expression"
        },
        {
          "type": "SYMBOL",
          "name": "curly_expression"
        },
        {
          "type": "SYMBOL",
          "name": "opcurry"
        },
        {
          "type": "SYMBOL",
          "name": "apply_expression"
        }
      ]
    },
    "operator_expression": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "SYMBOL",
              "name": "operator"
            }
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "parenthesized_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "curly_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "opcurry": {
      "type": "PREC_LEFT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "SYMBOL",
              "name": "operator"
            }
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "apply_expression": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "REPEAT1",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          }
        ]
      }
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[^\\W0-9_]+"
    },
    "operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "st_op"
        },
        {
          "type": "SYMBOL",
          "name": "main_op"
        },
        {
          "type": "SYMBOL",
          "name": "op"
        }
      ]
    },
    "st_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "|>"
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "STRING",
          "value": ":>"
        },
        {
          "type": "STRING",
          "value": "!>"
        },
        {
          "type": "STRING",
          "value": "<!"
        },
        {
          "type": "STRING",
          "value": "<:"
        },
        {
          "type": "STRING",
          "value": "<-"
        },
        {
          "type": "STRING",
          "value": "<|"
        },
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": "<"
        }
      ]
    },
    "main_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "op": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[^\\w(){} \\d\\t\\n\\r\\f\\v]+"
      }
    },
    "number": {
      "type": "PATTERN",
      "value": "-?\\d+"
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "PATTERN",
              "value": "[^\"]*"
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "PATTERN",
              "value": "[^']*"
            },
            {
              "type": "STRING",
              "value": "'"
            }
          ]
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
